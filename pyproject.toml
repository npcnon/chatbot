[tool.poetry]
name = "chatbot_backend"
version = "0.1.0"
description = ""
authors = ["User <user@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13.1"
alembic = "1.15.2"
loguru = "0.7.3"
fastapi = { extras = ["all"], version = "0.115.12" }
python-jose = { extras = ["cryptography"], version = "3.4.0" }
passlib = { extras = ["bcrypt"], version = "1.7.4" }
sqlalchemy = "2.0.40"
pydantic = "2.11.3"
asyncpg = "^0.30.0"
langchain-huggingface = "^0.1.2"
python-dotenv = "^1.1.0"
aiohttp = "^3.11.18"

[tool.poetry.group.dev.dependencies]
isort = "6.0.1"
mypy = "1.15.0"
black = "25.1.0"
pytest = "8.3.5"
pre-commit = "4.2.0"
sqlalchemy2-stubs = "^0.0.2a38"


[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude-extend = '''
/venv
/.venv
/__pycache__
/.mypy_cache
/.pytest_cache
/db.sqlite3
/alembic
'''

[tool.ruff]
line-length = 120
select = ["E", "F", "UP", "I"]
ignore = ["E501"]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "migrations",
    "__pypackages__",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "alembic"
]

[tool.ruff.isort]
section-order = ["future", "fastapi", "standard-library", "third-party",  "first-party", "local-folder"]

[tool.ruff.isort.sections]
fastapi = ["fastapi"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
